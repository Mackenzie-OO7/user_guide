# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, CWL Project Team
# This file is distributed under the same license as the Common Workflow
# Language User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Common Workflow Language User Guide \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-24 19:53+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../src/introduction/basic-concepts.md:1 7d238c155d6a40df8c8471ebb448a41e
msgid "Basic Concepts"
msgstr ""

#: ../../src/introduction/basic-concepts.md:3 4af76ab7bd674e6ab73765ddcc81d5bf
msgid ""
"This section describes the basic concepts for users to get started on "
"working with Common Workflow Language (CWL) workflows. Readers are "
"expected to be familiar with workflow managers, YAML, and comfortable "
"with following instructions for the command-line. The other sections of "
"the user guide cover the same concepts, but in more detail. If you are "
"already familiar with CWL or you are looking for more advanced content, "
"you may want to skip this section."
msgstr ""

#: ../../src/introduction/basic-concepts.md:10 4fafbbbfec734215872f455f1c7e62e9
msgid "The CWL Specification"
msgstr ""

#: ../../src/_includes/what-is-cwl.md:2 7250962d9fcc4338a7c9e64e0c2b3868
#: f8759274ac67447ab61551060918d9bc
msgid ""
"CWL is a way to describe command-line tools and connect them together to "
"create workflows. Because CWL is a specification and not a specific piece"
" of software, tools and workflows described using CWL are portable across"
" a variety of platforms that support the CWL standard."
msgstr ""

#: ../../src/introduction/basic-concepts.md:21 106e3e4dd19b42beaa90908e17529869
msgid ""
"The CWL specification is a document written and maintained by the CWL "
"community. The specification has different versions. The version covered "
"in this user guide is the {{ cwl_version }}."
msgstr ""

#: ../../src/introduction/basic-concepts.md:25 eb85aefcc6824c028479e299f3477c5a
msgid ""
"The specification version can have up to three numbers separated by `.`s "
"(dots). The first number is the major release, used for backward-"
"incompatible changes like the removal of deprecated features. The second "
"number is the minor release, used for new features or smaller changes "
"that are backward-compatible. The last number is used for bug fixes, like"
" typos and other corrections to the specification."
msgstr ""

#: ../../src/introduction/basic-concepts.md:33 59a0083e4e594253b5eb0a6d2756f271
msgid ""
"The model used for the specification version is called Semantic "
"Versioning. See the end of this section to [learn more](#learn-more) "
"about it."
msgstr ""

#: ../../src/introduction/basic-concepts.md:37 19dbee8336704859b5bd9f232879e81e
msgid "Implementations"
msgstr ""

#: ../../src/introduction/basic-concepts.md:39 947d98768fef4c3cb5b87208303b5712
msgid ""
"An implementation of the CWL specification is any software written "
"following what is defined in a version of the specification document. "
"However, implementations may not implement every aspect of the "
"specification. CWL implementations are licensed under both Open Source "
"and commercial licenses."
msgstr ""

#: ../../src/introduction/basic-concepts.md:44 de6edc23dc9b4759b2aaa0954050b6be
msgid ""
"CWL is well suited for describing large-scale workflows in cluster, cloud"
" and high performance computing environments where tasks are scheduled in"
" parallel across many nodes."
msgstr ""

#: ../../src/introduction/basic-concepts.md:51 ccee7288b79745d9a6a4bb32e9249594
msgid "CWL specification, implementations, and other tools."
msgstr ""

#: ../../src/introduction/basic-concepts.md:105
#: 10b787163c2e418291616a7bc1caf0bd
msgid "Processes and Requirements"
msgstr ""

#: ../../src/introduction/basic-concepts.md:107
#: 0176badcaff14e79ba00f1f26c40f42d
msgid ""
"A process is a computing unit that takes inputs and produces outputs. The"
" behavior of a process can be affected by the inputs, requirements, and "
"hints. There are four types of processes defined in the CWL specification"
" {{ cwl_version }}:"
msgstr ""

#: ../../src/introduction/basic-concepts.md:112
#: 36e1e02745a44b4ab7f80f593eb3c408
msgid "A command-line tool."
msgstr ""

#: ../../src/introduction/basic-concepts.md:113
#: c3e19102cf7d44c795dbd57897e4ad8a
msgid "An expression tool."
msgstr ""

#: ../../src/introduction/basic-concepts.md:114
#: 288483391ca742e18ed19cd89666c4a1
msgid "An operation."
msgstr ""

#: ../../src/introduction/basic-concepts.md:115
#: 5f5df951ffd6414eb054ca3af83a1abe
msgid "A workflow."
msgstr ""

#: ../../src/introduction/basic-concepts.md:118
#: 430425889a4c4f0a9f774d1b2e67debb
msgid "The processing units available in the CWL objects model."
msgstr ""

#: ../../src/introduction/basic-concepts.md:119
#: 9e42047299834ec6b41edf6c1b6d6513
msgid ""
"A command-line tool is a wrapper for a command-line utility like `echo`, "
"`ls`, and `tar`. A command-line tool can be called from a workflow."
msgstr ""

#: ../../src/introduction/basic-concepts.md:122
#: f6d4657261e042fd8bd9782047d19ea9
msgid ""
"An expression tool is a wrapper for a JavaScript expression. It can be "
"used to simplify workflows and command-line tools, moving common parts of"
" a workflow execution into reusable JavaScript code that takes inputs and"
" produces outputs like a command-line tool."
msgstr ""

#: ../../src/introduction/basic-concepts.md:127
#: fb8fa26ade2e4555bc5904a680d4de23
msgid ""
"Operation is an abstract process that also takes inputs, produces "
"outputs, and can be used in a workflow. But it is a special operation not"
" so commonly used. It is discussed in the [Operations "
"section](../topics/operations.md) of this user guide."
msgstr ""

#: ../../src/introduction/basic-concepts.md:131
#: 1eb86d0cb6c74685829e7f978b177212
msgid ""
"The workflow is a process that contains steps. Steps can be other "
"workflows (nested workflows), command-line tools, or expression tools. "
"The inputs of a workflow can be passed to any of its steps, while the "
"outputs produced by its steps can be used in the final output of the "
"workflow."
msgstr ""

#: ../../src/introduction/basic-concepts.md:137
#: dda24aff00964493ae997f36dff74c04
msgid ""
"The CWL specification allows for implementations to provide extra "
"functionality and specify prerequisites to workflows through "
"*requirements*. There are many requirements defined in the CWL "
"specification, for instance:"
msgstr ""

#: ../../src/introduction/basic-concepts.md:141
#: e696bf67d6d04416b3f9c43f12376a10
msgid "`InlineJavascriptWorkflow` - enables JavaScript in expressions."
msgstr ""

#: ../../src/introduction/basic-concepts.md:142
#: b9746c3e3e554c2684be3917a31c7d10
msgid "`SubworkflowFeatureRequirement` - enables nested workflows."
msgstr ""

#: ../../src/introduction/basic-concepts.md:143
#: 8605fc09a1a04ab7ad271ac2bea9a17b
msgid ""
"`InitialWorkDirRequirement` - controls staging files in the input "
"directory."
msgstr ""

#: ../../src/introduction/basic-concepts.md:145
#: a1fb5f8dd8964b6fb8990f7e877f8e3f
msgid ""
"Some CWL runners may provide requirements that are not in the "
"specification. For example, GPU requirements are supported in `cwltool` "
"through the `cwltool:CUDARequirement` requirement, but it is not part of "
"the {{ cwl_version }} specification and may not be supported by other CWL"
" runners."
msgstr ""

#: ../../src/introduction/basic-concepts.md:151
#: 8fe3e01579524ef2badf284092ce00de
msgid ""
"Hints are similar to requirements, but while requirements list features "
"that are required, hints list optional features. Requirements are "
"explained in detail in the [Requirements](../topics/requirements-and-"
"hints.md) section."
msgstr ""

#: ../../src/introduction/basic-concepts.md:155
#: c0ca689a49334564baf49359b582c491
msgid "FAIR Workflows"
msgstr ""

#: ../../src/introduction/basic-concepts.md:157
#: fa9a58da83a04493bee1d1e6c1cba8e1
msgid ""
"The FAIR principles have laid a foundation for sharing and publishing "
"digital assets, and in particular, data. The FAIR principles emphasize "
"machine accessibility and that all digital assets should be Findable, "
"Accessible, Interoperable, and Reusable. Workflows encode the methods by "
"which the scientific process is conducted and via which data are created."
" It is thus important that workflows support the creation of FAIR data "
"and adhere to the FAIR principles. — [FAIR Computational "
"Workflows](https://workflows.community/groups/fair/), Workflows Community"
" Initiative."
msgstr ""

#: ../../src/introduction/basic-concepts.md:167
#: 93e390de3c1445e5afa0a8bc8ee99480
msgid ""
"CWL has roots in \"make\" and many similar tools that determine order of "
"execution, based on dependencies between tasks. However, unlike \"make\","
" CWL tasks are isolated, and you must be explicit about your inputs and "
"outputs."
msgstr ""

#: ../../src/introduction/basic-concepts.md:171
#: 4b5b1dfad3aa4fee9a41463d5feeb8ea
msgid ""
"The benefit of explicitness and isolation are flexibility, portability, "
"and scalability; tools and workflows described with CWL can transparently"
" leverage technologies such as Docker and be used with CWL "
"implementations from different vendors."
msgstr ""

#: ../../src/introduction/basic-concepts.md:176
#: 6c0621375a704ed0a79d4ae65538bb31
msgid "`cwltool` also uses the PROV-O standard ontology for data provenance."
msgstr ""

#: ../../src/introduction/basic-concepts.md:178
#: ../../src/introduction/prerequisites.md:196
#: ../../src/introduction/quick-start.md:94 357ae9a25a644caab49ddb3c9ead1028
#: 646006005df94092ac1134bc194d5fe7 e495fae55ee1480c88438ec4dcc1fc5c
msgid "Learn More"
msgstr ""

#: ../../src/introduction/basic-concepts.md:180
#: ab4a78d72dfa43b180615e565080d07a
msgid "Semantic Versioning - <https://semver.org/>"
msgstr ""

#: ../../src/introduction/basic-concepts.md:181
#: ba8d7155363b4ed59912fc426b207ffc
msgid ""
"The CWL Specification page in the CWL website: "
"<https://www.commonwl.org/specification/>"
msgstr ""

#: ../../src/introduction/basic-concepts.md:182
#: 37fc683fd3564bd698e3a8843ed7e401
msgid ""
"The current CWL specification on GitHub: {{ '<https://github.com/common-"
"workflow-language/cwl-{}>'.format(cwl_version_text) }}"
msgstr ""

#: ../../src/introduction/basic-concepts.md:183
#: e6af1cb1c3484a1db8fa8577dd5684c6
msgid ""
"The list of Implementations in the CWL website: "
"<https://www.commonwl.org/implementations/>"
msgstr ""

#: ../../src/introduction/basic-concepts.md:184
#: fe7682c04d344a71a2d1de3586f83f38
msgid "PROV-O: The PROV Ontology - <https://www.w3.org/TR/prov-o/>"
msgstr ""

#: ../../src/introduction/basic-concepts.md:185
#: caf02d5ff6c04255a2144ff453884b0b
msgid ""
"CWL Operations are covered in the [Operations](../topics/operations.md) "
"section of this user guide."
msgstr ""

#: ../../src/introduction/index.md:1 a22112574264441eb4b775ce72f7ee62
msgid "Introduction"
msgstr ""

#: ../../src/introduction/index.md:3 fe9e792085024abb95180662bf0657a9
msgid ""
"This section will guide you through a short introduction to CWL, the "
"prerequisites for following this user guide, and some basic concepts that"
" are useful to know before reading the rest of the user guide."
msgstr ""

#: ../../src/introduction/prerequisites.md:1 23849325192045f5aa48c9f3d9a2080a
msgid "Prerequisites"
msgstr ""

#: ../../src/introduction/prerequisites.md:6 c7c0e1cd18d54dcca7062d7d053dcc35
msgid ""
"The software and configurations listed in this section are prerequisites "
"for following this user guide. The CWL standards are implemented by many "
"different workflow runners and platforms. This list of requirements "
"focuses on the CWL reference runner, `cwltool`. You can use another CWL-"
"compatible runner or workflow system, but the results and interface may "
"look different (though the exact workflow outputs should be identical)."
msgstr ""

#: ../../src/introduction/prerequisites.md:12 5d7a4a2cccbb47bbaa9ba2ca2de1eff2
msgid "CWL Implementations"
msgstr ""

#: ../../src/introduction/prerequisites.md:14 a0ebb398fd1944858fde855a37938446
msgid ""
"There are many implementations of the CWL standards. Some are complete "
"CWL runners, while others could be plug-ins or extensions to workflow "
"engines. We have a better explanation in the [Implementations](basic-"
"concepts.md#implementations) section."
msgstr ""

#: ../../src/introduction/prerequisites.md:19 83d90d246db24c07a73bcd73a3c6bfb6
msgid "Operating System"
msgstr ""

#: ../../src/introduction/prerequisites.md:21 c2fd09dd72af46ca8e3284d0c1c7dffb
msgid ""
"We recommend using an up-to-date operating system. You can choose any of "
"the following options for your operating system:"
msgstr ""

#: ../../src/introduction/prerequisites.md:24 00694f21c8bd435f9de10785d2a829dc
msgid "Linux"
msgstr ""

#: ../../src/introduction/prerequisites.md:25 3cd6a5a0a9754a678ec4eb5a9569a2ab
msgid "macOS"
msgstr ""

#: ../../src/introduction/prerequisites.md:26 2b0d2a5dc85c4216840c2ce406e10413
msgid "Windows"
msgstr ""

#: ../../src/introduction/prerequisites.md:29 0f8ab0f07c9f4e92b6907685a21e0d09
msgid ""
"If you are using Windows, you will have to install the [Windows Subsystem"
" for Linux 2](https://learn.microsoft.com/en-us/windows/wsl/install) "
"(WSL2). Visit the `cwltool` [documentation](https://github.com/common-"
"workflow-language/cwltool/blob/main/README.rst#ms-windows-users) for "
"details on installing WSL2. Your operating system also needs internet "
"access and a recent version of Python (3.6+)."
msgstr ""

#: ../../src/introduction/prerequisites.md:35 eb1b97c2f64c43c78cf620f0b3197707
msgid "CWL Runner"
msgstr ""

#: ../../src/introduction/prerequisites.md:41 b0fff1b3d67e4e01b7140def8004924a
msgid ""
"The first thing you will need for running CWL workflows is a CWL runner. "
"`cwltool` is a Python Open Source project maintained by the CWL "
"community. It is also the CWL reference runner, which means it must "
"support everything in the current CWL specification, {{ cwl_version }}."
msgstr ""

#: ../../src/introduction/prerequisites.md:46 dfad9ccfdc5949adb5785e57a3f0a345
msgid ""
"`cwltool` can be installed with `pip`. We recommend using a virtual "
"environment like `venv` or `conda`. The following commands will create "
"and activate a Python virtual environment using the `venv` module, and "
"install `cwltool` in that environment:"
msgstr ""

#: ../../src/introduction/prerequisites.md:51 229d3b94015c46f89a7fcf3035a06e38
msgid "Installing `cwltool` with `pip` and `venv`."
msgstr ""

#: ../../src/introduction/prerequisites.md:62 bede33df513b4ff0bf31a1c4a1b76304
msgid ""
"Visit the `cwltool` [documentation](https://github.com/common-workflow-"
"language/cwltool#install) for other ways to install `cwltool` with `apt` "
"and `conda`."
msgstr ""

#: ../../src/introduction/prerequisites.md:65 f20e6ae025fc48cf82b490aa1e45d978
msgid "Let's use a simple CWL tool description `true.cwl` with `cwltool`."
msgstr ""

#: ../../src/introduction/prerequisites.md:67 10c729f31bd94b2580a494a07e8c8c06
msgid "`true.cwl`"
msgstr ""

#: ../../src/introduction/prerequisites.md:73 55571e0099af459bb38ef2cbb5ce3720
msgid ""
"The `cwltool` command has an option to validate CWL tool and workflow "
"descriptions. This option will parse the CWL document, look for syntax "
"errors, and verify that the workflow descriptions are compliant with the "
"CWL standards. However, these actions will be performed without running "
"the document. To validate CWL workflows (or even a standalone command "
"line tool description like the above) pass the `--validate` option to the"
" `cwltool` command:"
msgstr ""

#: ../../src/introduction/prerequisites.md:79 436d10464d0540da9227bff0e7721928
msgid "Validating `true.cwl` with `cwltool`."
msgstr ""

#: ../../src/introduction/prerequisites.md:84 db76c196cff7476c9f0059410071109e
msgid "You can run the CWL tool description by omitting the `--validate` option:"
msgstr ""

#: ../../src/introduction/prerequisites.md:86 5c34965d08704905af72df2d02f399ea
msgid "Running `true.cwl` with `cwltool`."
msgstr ""

#: ../../src/introduction/prerequisites.md:91 c4b1c6f7a6214a2a8cda037dfd1ce5e7
msgid "Cwl-runner Python Module"
msgstr ""

#: ../../src/introduction/prerequisites.md:93 22b70a1995e24ae1a5e688b08d69be78
msgid ""
"`cwl-runner` is an implementation-agnostic alias for any CWL compliant "
"runner. This simply means that the `cwl-runner` alias command can be "
"invoked independently, and is not reliant on a particular CWL runner "
"program name. Users can invoke `cwl-runner` instead of invoking a CWL "
"runner like `cwltool` directly. The `cwl-runner` is installed by a system"
" administrator or user to point to the preferred CWL implementation. This"
" is convenient for environments with multiple CWL runners."
msgstr ""

#: ../../src/introduction/prerequisites.md:101 2b078afe85c9496ebe7c4fd5fa849506
msgid ""
"The CWL community publishes a Python package with the name `cwlref-"
"runner` that installs an alias for `cwltool` under the name `cwl-runner`"
msgstr ""

#: ../../src/introduction/prerequisites.md:104 edb107bbbef94363a531344862b0646b
msgid "Installing `cwl-runner` alias for cwltool with `pip`."
msgstr ""

#: ../../src/introduction/prerequisites.md:111 c92da002f02148e485fccabfb80f78c6
msgid ""
"Now you can validate and run your workflow with the `cwl-runner` "
"executable, which will invoke `cwltool`. You should have the same results"
" and output as in the previous section."
msgstr ""

#: ../../src/introduction/prerequisites.md:115 5ff5383fffc646cf860b9e6adffe0d4a
msgid "Validating `true.cwl` with `cwl-runner`."
msgstr ""

#: ../../src/introduction/prerequisites.md:120 3fb6539b1da24c6d8cab103ebaa728e9
msgid "Running `true.cwl` with `cwl-runner`."
msgstr ""

#: ../../src/introduction/prerequisites.md:125 56f8f92a8e4e46de9def7d33926a9354
msgid ""
"Another way to execute `cwl-runner` is by invoking the file directly. For"
" that, the first thing you need to do is copy `true.cwl` workflow into a "
"new file: `true_shebang.cwl`, and include a special first line, a "
"*shebang*:"
msgstr ""

#: ../../src/introduction/prerequisites.md:129 f024c312097941cc838f6e4684709e2d
msgid "`true_shebang.cwl`"
msgstr ""

#: ../../src/introduction/prerequisites.md:135 27eb4624fa6a4fbca5c842bc69e277ff
msgid "Now you can make the file `true_shebang.cwl` executable with `chmod u+x`."
msgstr ""

#: ../../src/introduction/prerequisites.md:137 a086a591e5034a768d6ed9f95ccffb41
msgid "Making `true.cwl` executable."
msgstr ""

#: ../../src/introduction/prerequisites.md:144 dacb4f334ee64afa9da1418b806fbb8a
msgid ""
"And finally, you can execute it directly in the command-line. On "
"execution, the program specified in the shebang (`cwl-runner`) will be "
"used to execute the rest of the file."
msgstr ""

#: ../../src/introduction/prerequisites.md:148 64cb2e80ed554f75aa64bc856c011e74
msgid "Running `true_shebang.cwl` with a shebang."
msgstr ""

#: ../../src/introduction/prerequisites.md:154 7c008d7286b242c4989809773075e369
msgid ""
"The *shebang* is the two-character sequence `#!` at the beginning of a "
"script. When the script is executable, the operating system will execute "
"the script using the executable specified after the shebang. It is "
"considered a good practice to use `/usr/bin/env <executable>` rather than"
" using a hard-coded location, since `/usr/bin/env <executable>` looks for"
" the `<executable>` program in the system `PATH`,"
msgstr ""

#: ../../src/introduction/prerequisites.md:161 3d0c3d9473b64745aaadd1c97f86e6bd
msgid "Text Editor"
msgstr ""

#: ../../src/introduction/prerequisites.md:163 f87429becda74bdab6e9e8956da16786
msgid ""
"You can use any text editor with CWL, but for syntax highlighting we "
"recommend an editor with YAML support. Popular editors are Visual Studio "
"Code, Sublime, WebStorm, vim/neovim, and Emacs."
msgstr ""

#: ../../src/introduction/prerequisites.md:167 40faebbbe3974365adbf4190ac9571af
msgid ""
"There are extensions for Visual Studio Code and WebStorm that provide "
"integration with CWL, and features such as customized syntax highlighting"
" and better auto-complete:"
msgstr ""

#: ../../src/introduction/prerequisites.md:171 24ce76cffa4c4dc3b1471c932ce34d28
msgid ""
"Visual Studio Code with the Benten (CWL) plugin - "
"<https://github.com/rabix/benten#install-vs-code-extension>"
msgstr ""

#: ../../src/introduction/prerequisites.md:172 1a14a5c5c15941ff8f957be9b7e346fd
msgid ""
"cwl-plugin for IntelliJ - <https://plugins.jetbrains.com/plugin/10040"
"-cwl-plugin>"
msgstr ""

#: ../../src/introduction/prerequisites.md:174 6fccaea992b74740b91aa4dea1e9b6f6
msgid ""
"The CWL community also maintains a list of editors and viewers: "
"<https://www.commonwl.org/tools/#editors>"
msgstr ""

#: ../../src/introduction/prerequisites.md:177 ff2d02dada844e349ce39147eaec02a0
msgid "Docker"
msgstr ""

#: ../../src/introduction/prerequisites.md:181 756d50a22d9944989e83fd49691b7dc1
msgid ""
"`cwltool` uses Docker to run tools, workflows, and workflow steps that "
"specify a software container. Follow the instructions in the Docker "
"documentation to install it for your operating system: "
"<https://docs.docker.com/>."
msgstr ""

#: ../../src/introduction/prerequisites.md:185 208ae40269d64a95922c3b6b88fa7af0
msgid ""
"You do not need to know how to write and build Docker containers. In the "
"rest of the user guide, we will use existing Docker images for running "
"examples, and to clarify the differences between the execution models "
"with and without containers."
msgstr ""

#: ../../src/introduction/prerequisites.md:191 676cbeed9ecf468587f88adf03f088f2
msgid ""
"`cwltool` supports running containers with Docker, Podman, udocker, and "
"Singularity. You can also use alternative container registries for "
"pulling images."
msgstr ""

#: ../../src/introduction/prerequisites.md:198 97048cb2351f4408946828ff46cd513e
msgid ""
"The [Implementations](basic-concepts.md#implementations) topic in the "
"next section, Basic Concepts."
msgstr ""

#: ../../src/introduction/prerequisites.md:199 28810c389a8f480d8af7af37580fba6e
msgid "The Python `venv` module: <https://docs.python.org/3/library/venv.html>"
msgstr ""

#: ../../src/introduction/quick-start.md:1 6eba770f0a494294ada23cdfe563ada6
msgid "Quick Start"
msgstr ""

#: ../../src/introduction/quick-start.md:3 bc84e8e2bd7b4e2eadf8e09b64f8b11e
msgid ""
"This section will show you a brief overview of what CWL is, and where you"
" can learn more about it. No previous knowledge of CWL is required, but "
"you must be comfortable following instructions for the command-line."
msgstr ""

#: ../../src/introduction/quick-start.md:7 244007c12d0e4c11b5bc5a50fbb7b263
msgid "“Hello World”"
msgstr ""

#: ../../src/introduction/quick-start.md:12 1b7f68f5a3214f4da4f1887d14ced464
msgid ""
"CWL documents are written in [YAML](../topics/index.md) (and/or JSON). "
"The example below shows a simple CWL “Hello World” workflow annotated "
"with comments. Note that comments start with `#`:"
msgstr ""

#: ../../src/introduction/quick-start.md:16 aab574ceba8348b7a62c1c645c7ae300
msgid "`hello_world.cwl`"
msgstr ""

#: ../../src/introduction/quick-start.md:22 e3e88da22e65425292b19d8159e6bcdc
msgid ""
"The example above is just a wrapper for the `echo` command-line tool. "
"Running the workflow above with the default input values will produce the"
" same result as the command-line `echo \"Hello World\"`."
msgstr ""

#: ../../src/introduction/quick-start.md:27 fbdbaead418f4246b4216acce9c6a51f
msgid ""
"In CWL, there is a distinction between a command-line tool and a "
"workflow. But for the sake of simplicity, we are using the term "
"“workflow” here. You will learn more about this in the [basic concepts"
"](basic-concepts.md) section."
msgstr ""

#: ../../src/introduction/quick-start.md:32 008fc4481f1c4c7bb215fa3b6096048f
msgid "Installing a CWL Runner"
msgstr ""

#: ../../src/introduction/quick-start.md:34 31d3ab3f31c44729989ee72a756c7242
msgid ""
"`cwltool` is an implementation of the CWL specification. It is also the "
"CWL *Reference Runner* for the specification, and it is compliant with "
"the latest version of the specification: {{ cwl_version }}. You can "
"install `cwltool` using `pip`:"
msgstr ""

#: ../../src/introduction/quick-start.md:39 069fa8bae74d4c24b680c4199d714277
msgid "Installing `cwltool` with `pip`."
msgstr ""

#: ../../src/introduction/quick-start.md:47 62cacbc189d0440ebe4a8dde4878450c
msgid ""
"If installing the cwltool using the pip command doesn't work for you, the"
" [prerequisites](prerequisites.md) section contains other ways to install"
" `cwltool` and a more detailed list of software and libraries used for "
"following the rest of this user guide."
msgstr ""

#: ../../src/introduction/quick-start.md:51 f208e50c0089409aa7463c915be80092
msgid "Running \"Hello World\""
msgstr ""

#: ../../src/introduction/quick-start.md:53 6c551e9af341475496b7b6b104330183
msgid ""
"The usage of the `cwltool` command-line executable is basically `cwltool "
"[OPTIONS] <CWL_DOCUMENT> [INPUTS_OBJECT]`. You can run the "
"`hello_world.cwl` workflow without specifying any option:"
msgstr ""

#: ../../src/introduction/quick-start.md:57 da2c9a63648342aab3f3b8a34660a4bc
msgid "Running `hello_world.cwl` with `cwltool`."
msgstr ""

#: ../../src/introduction/quick-start.md:62 1217d999216f47aa8f1903e2417fc57a
msgid ""
"Or you can override the default value of the input parameter `message`, "
"similar to how you would change the argument of the `echo` base command:"
msgstr ""

#: ../../src/introduction/quick-start.md:65 3559a76a1fc64f3eb61a503bf7c77757
msgid "Running `hello_world.cwl` with `cwltool` passing an input parameter."
msgstr ""

#: ../../src/introduction/quick-start.md:70 21386999503341408b798efa9fc4f262
msgid ""
"Another way of passing values to your workflow input parameters is via an"
" *Inputs Object*. This is a file containing the input fields with their "
"corresponding values. The Inputs Objects file can be written in JSON or "
"YAML. For example:"
msgstr ""

#: ../../src/introduction/quick-start.md:74 215e425a5ae64cd0ac5e8d34d7f47b58
msgid "`hello_world-job.json`"
msgstr ""

#: ../../src/introduction/quick-start.md:80 963c003c4a334dbe874edc0ab38ea92f
msgid ""
"You can use this Inputs Object file now to execute the “Hello World” "
"workflow:"
msgstr ""

#: ../../src/introduction/quick-start.md:82 83921375eed44fc695cbc172d9317032
msgid "Passing an Inputs Object file to `cwltool`."
msgstr ""

#: ../../src/introduction/quick-start.md:88 9795092d234e4fa5a2bdfc4c9c02460f
msgid ""
"We used a similar file name for the workflow and for the Inputs Object "
"files. The *-job.json* suffix is very common in Inputs Object files, but "
"it is not a requirement. You can choose any name for your workflows and "
"Inputs Object files."
msgstr ""

#: ../../src/introduction/quick-start.md:96 8846a5ff35b64859b8ec7b16be9f8f6b
msgid "Continue reading the next sections of this User Guide!"
msgstr ""

#: ../../src/introduction/quick-start.md:97 785c9e2330b045b39bf02f77ab6513f6
msgid "[List of CWL Implementations](https://www.commonwl.org/implementations)."
msgstr ""

#: ../../src/introduction/quick-start.md:98 b6d05398bca648b8ac25755fbaab91c0
msgid ""
"The [`common-workflow-language` organization](https://github.com/common-"
"workflow-language) at GitHub."
msgstr ""

#: ../../src/introduction/quick-start.md:99 2ccf7e847e0b476493ae514381ca3612
msgid ""
"[Common Workflow Language at "
"Wikipedia](https://en.wikipedia.org/wiki/Common_Workflow_Language)."
msgstr ""

#: ../../src/introduction/quick-start.md:100 d7168eb1f7384733be6316fe72f486eb
msgid ""
"[YAML.org](http://yaml.org/) and [YAML at "
"Wikipedia](https://en.wikipedia.org/wiki/YAML)."
msgstr ""

#: ../../src/introduction/quick-start.md:101 14bbd3ce1f2a488ca919d4f26c8f1e5a
msgid ""
"The {{'[CWL Specification "
"VERSION](https://www.commonwl.org/VERSION)'.replace('VERSION', "
"cwl_version_text) }}."
msgstr ""

#: ../../src/introduction/quick-start.md:102 86f1fc65d2d14a41ac282eb63fd9de86
msgid ""
"[Workflow management system at "
"Wikipedia](https://en.wikipedia.org/wiki/Workflow_management_system)."
msgstr ""

