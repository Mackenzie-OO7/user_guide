# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, CWL Project Team
# This file is distributed under the same license as the Common Workflow Language User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Common Workflow Language User Guide \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-24 17:23+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../src/topics/troubleshooting.md:1
#: 628f6b4dad6d4b2e87d3c34d99b3bc9a
msgid "Troubleshooting"
msgstr ""

#: ../../src/topics/troubleshooting.md:3
#: c2f444d8af5b47b389a53f047f42f7fc
msgid "In this section you will find ways to troubleshoot when you have problems executing CWL. We focus on `cwltool` here but some of these techniques may apply to other CWL Runners."
msgstr ""

#: ../../src/topics/troubleshooting.md:6
#: b4d58509c2874a3a9a4aca8b0eb54b8e
msgid "Run `cwltool` with `cachedir`"
msgstr ""

#: ../../src/topics/troubleshooting.md:8
#: cf0d233ea286443d9b4cd7b8e9b03090
msgid "You can use the `--cachedir` option when running a workflow to tell `cwltool` to cache intermediate files (files that are not input nor output files, but created while your workflow is running). By default, these files are created in a temporary directory but writing them to a separate directory makes accessing them easier."
msgstr ""

#: ../../src/topics/troubleshooting.md:14
#: e742b4b7517a4461ab38cd572fd02412
msgid "In the following example `troubleshooting-wf1.cwl` we have two steps, `step_a` and `step_b`. The workflow is equivalent to `echo \"Hello World\" | rev`, which would print the message \"Hello World\" reversed, i.e. \"dlroW olleH\". However, the second step, `step_b`, **has a typo**, where instead of executing the `rev` command it tries to execute `revv`, which fails."
msgstr ""

#: ../../src/topics/troubleshooting.md:20
#: 8d0d5c4374ff4659b0a34f86a106915e
msgid "`troubleshooting-wf1.cwl`"
msgstr ""

#: ../../src/topics/troubleshooting.md:27
#: 2c4194ab026e41cb807e7cb15bc37e34
msgid "Let's execute this workflow with `/tmp/cachedir/` as the `--cachedir` value (`cwltool` will create the directory for you if it does not exist already):"
msgstr ""

#: ../../src/topics/troubleshooting.md:35
#: 0d287a4115ea4e34b239790ceee5d9be
msgid "The workflow is in the `permanentFail` status due to `step_b` failing to execute the non-existent `revv` command. The `step_a` was executed successfully and its output has been cached in your `cachedir` location. You can inspect the intermediate files created:"
msgstr ""

#: ../../src/topics/troubleshooting.md:44
#: b72ee99d9aee4c88bf4ae1a493b40415
msgid "Each workflow step has received a unique ID (the long value that looks like a hash). The `${HASH}.status` files display the status of each step executed by the workflow. And the `step_a` output file `stdout.txt` is visible in the output of the command above."
msgstr ""

#: ../../src/topics/troubleshooting.md:48
#: 6541e0afd1784cdd890cae031fc6b13e
msgid "Now fix the typo so `step_b` executes `rev` (i.e. replace `revv` by `rev` in the `step_b`). After fixing the typo, when you execute `cwltool` with the same arguments as the previous time, note that now `cwltool` output contains information about pre-cached outputs for `step_a`, and about a new cache entry for the output of `step_b`. Also note that the status of `step_b` is now of success."
msgstr ""

#: ../../src/topics/troubleshooting.md:59
#: 3881a8c9e89c42c3a4a9fb99dffd6de8
msgid "In this example the workflow step `step_a` was not re-evaluated as it had been cached, and there was no change in its execution or output. Furthermore, `cwltool` was able to recognize when it had to re-evaluate `step_b` after we fixed the executable name. This technique is useful for troubleshooting your CWL documents and also as a way to prevent `cwltool` to re-evaluate steps unnecessarily."
msgstr ""
