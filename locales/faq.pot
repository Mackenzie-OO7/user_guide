# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, CWL Project Team
# This file is distributed under the same license as the Common Workflow Language User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Common Workflow Language User Guide \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-24 19:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../src/faq.md:1
#: 38d96ecb6f4f4835a94fce7389f64290
msgid "FAQ"
msgstr ""

#: ../../src/faq.md:11
#: cf04e2bcede444ec84829b20873bb458
msgid "Non \"`File`\" Types Using `evalFrom`"
msgstr ""

#: ../../src/faq.md:41
#: 7f5a8ebf64a6457290031a9878fcadb4
msgid "Rename an Input File"
msgstr ""

#: ../../src/faq.md:43
#: d2da25aa3d4149c6a839e5a9d260d637
msgid "This example demonstrates how to change the name of an input file as part of a tool description. This could be useful when you are taking files produced from another step in a workflow, and don't want to work with the default names that these files were given when they were created."
msgstr ""

#: ../../src/faq.md:59
#: bb7a7c1994c44fd984a3d6daee56ca77
msgid "Rename an Output File"
msgstr ""

#: ../../src/faq.md:61
#: ab649294dceb4701b50840614da498e9
msgid "This example demonstrates how to change the name of an output file from the default name given to it by a tool:"
msgstr ""

#: ../../src/faq.md:82
#: 38a2bfda017f48af91062768c29228d6
msgid "Referencing a Local Script"
msgstr ""

#: ../../src/faq.md:84
#: 73d6982c5a414307943c5100df766a29
msgid "There are two ways to reference a local script:"
msgstr ""

#: ../../src/faq.md:86
#: 81acda6459354bf08b4f1454b3b2dcc4
msgid "The first method involves adding the folder containing your scripts to the `PATH` environment variable. This allows you to run the shell script directly without using `sh` or `bash` commands."
msgstr ""

#: ../../src/faq.md:89
#: c06ed26bc9d54aa2803014ba69e9ac78
msgid "Start with adding a _shebang_ at the top of your file:"
msgstr ""

#: ../../src/faq.md:95
#: eb25e79af23e4104b38f6265e677c6a8
msgid "After that, make the script executable with the command `chmod +x scriptname.sh`"
msgstr ""

#: ../../src/faq.md:97
#: b618a3759865456f9ceb02a6a16ccba1
msgid "Finally, modify your `PATH` to add the directory where your script is located. (It is good practice to use `$HOME/bin` for storing your own scripts)."
msgstr ""

#: ../../src/faq.md:104
#: 455b1a1f10044b5c98b7fab451f48ed5
msgid "Now you can use `baseCommand: scriptname.sh` to run the script directly."
msgstr ""

#: ../../src/faq.md:113
#: 6b44a7665da14b6aa887224b2fe3c15f
msgid "When you wish to share your work later, you can place your script in a software container in the Docker format."
msgstr ""

#: ../../src/faq.md:115
#: a05b7978ef76413588e211bd9bf9250c
msgid "The second method involves including an input of `type: File` in the script itself:"
msgstr ""

#: ../../src/faq.md:135
#: 6caf0ac2ccad4e449dfe5578ff75ec0e
msgid "In CWL, everything must be directly stated."
msgstr ""

#: ../../src/faq.md:138
#: ffe1586183ab4a3199639b1f9e8062c1
msgid "Setting `self`-based Input Bindings for Optional Inputs"
msgstr ""

#: ../../src/faq.md:140
#: a8314e810d564e198e9fad0e32c23117
msgid "Currently, `cwltool` can't cope with missing optional inputs if their input binding makes use of `self`. Below is an example workaround for this, pending a more sophisticated fix."
msgstr ""

#: ../../src/faq.md:165
#: 77c15e3d59c74848b3b6ad85f213b30c
msgid "Model a \"one-or-the-other\" Parameter"
msgstr ""

#: ../../src/faq.md:167
#: f3d50a6a37494ce9883a4d9cd0ce7870
msgid "Below is an example showing how to specify different strings to be added to a command line, based on the value given to a Boolean parameter."
msgstr ""

#: ../../src/faq.md:188
#: 9d7e8ab5d8864376814d12f10b52c6a4
msgid "Connect a Solo Value to an Input that Expects an Array of that Type"
msgstr ""

#: ../../src/faq.md:190
#: 93b78d5afe4541eaba53b6ea29150658
msgid "Using [`MultipleInputFeatureRequirement`](https://www.commonwl.org/v1.0/Workflow.html#MultipleInputFeatureRequirement) along with [`linkMerge: merge_nested`](https://www.commonwl.org/v1.0/Workflow.html#WorkflowStepInput)"
msgstr ""

#: ../../src/faq.md:194
#: 8bfb650cce844e31a30a6e1773d92a48
msgid "merge_nested"
msgstr ""

#: ../../src/faq.md:196
#: 0624c44a35e944c2b463146331c9ba4d
msgid "The input must be an array consisting of exactly one entry for each input link. If \"merge_nested\" is specified with a single link, the value from the link must be wrapped in a single-item list."
msgstr ""

#: ../../src/faq.md:199
#: 1f4df1cd685e4bd5a695e7ace5a9159d
msgid "Which means \"create a list with exactly these sources as elements\""
msgstr ""

#: ../../src/faq.md:201
#: 1f057777e7a9430bbbc2036e53a6e4fb
msgid "Or in other words: if the destination is of type `File[]` (an array of `File`s) and the source is a single `File` then add `MultipleInputFeatureRequirement` to the Workflow level `requirements` and add `linkMerge: merge_nested` under the appropriate `in` entry of the destination step."
msgstr ""

#: ../../src/faq.md:229
#: f64dbbcaac5642cebbd7cbd96d85c40d
msgid "Optional Inputs üíØ"
msgstr ""

#: ../../src/faq.md:231
#: 71f80d93e08342ad8b6db87ec9c837cf
msgid "To make an input parameter optional, add a question mark to the type declaration."
msgstr ""

#: ../../src/faq.md:247
#: 7dec6a02cc364c8a9723043a3e8b7d79
msgid "<a name=\"enuminputs\"></a>"
msgstr ""

#: ../../src/faq.md:248
#: 8a06fc5a9f80481888418234671702cd
msgid "Enum Inputs ‚öúÔ∏è"
msgstr ""

#: ../../src/faq.md:250
#: 2f3dc891f5b64378abc449947a5117cc
msgid "For command line flags that require a specific input as the argument an enum type can be declared in CWL. **Specifying null here is known as long form style. It does the same thing as the question mark on the other inputs.**"
msgstr ""

#: ../../src/faq.md:267
#: b5324b01d6614202b0fac7026a450caa
msgid "<a name=\"recordinputs\"></a>"
msgstr ""

#: ../../src/faq.md:268
#: 1198ce319b4847f8b74a14d2ec5248d5
msgid "Record Inputs üìÄ"
msgstr ""

#: ../../src/faq.md:270
#: d9e2a621f8ae455092120ebb711d1f99
msgid "For commandline flags that are either **mutually exclusive** or **dependent** a special record type can be defined. You can also specify null here to create optional inputs."
msgstr ""

#: ../../src/faq.md:322
#: 2c4153eb18d94ad7bbad6acab1b5b61a
msgid "Setting Mutually Exclusive Parameters"
msgstr ""

#: ../../src/faq.md:324
#: 77b90349be254ceb8de2cf58aa410e6d
msgid "To properly set fields in a record input type, you need to pass a dictionary to the input to properly set the parameters. This is done by using inline JavaScript and returning the dictionary with the key of the field you want to set. The source field is set to indicate the input from the workflow to be used as the value."
msgstr ""

#: ../../src/faq.md:342
#: 31e2b62687b84efda4924d7108e23cb3
msgid "Setting Booleans"
msgstr ""

#: ../../src/faq.md:344
#: 8c72738f5aaa4fcd8457a10e799d0e8d
msgid "These can be set by using the default field"
msgstr ""

#: ../../src/faq.md:349
#: 3a83df07178945d4822e3520674d6308
msgid "Concatenating Strings in Inputs"
msgstr ""

#: ../../src/faq.md:351
#: 2aca2690fdac4922bfdc9e5a9f2741b8
msgid "The valueFrom field must be used instead of default."
msgstr ""

#: ../../src/faq.md:359
#: 3d072aa6b914445ca8326ffe260b4e35
msgid "`cwltool` Errors due to Filenames with Space Characters Inside"
msgstr ""

#: ../../src/faq.md:361
#: fb653b6af6a74231904d2d0f850d1116
msgid "`cwltool` does not allow some characters in filenames by default."
msgstr ""

#: ../../src/faq.md:363
#: d3d261dd88a94fa8ae8bf65c39eef6a1
msgid "For example, the filename `a space is here.txt` includes 3 space characters."
msgstr ""

#: ../../src/faq.md:371
#: f7125b78a28c4924bdd3fcb37a184ff6
msgid "If you can not avoid these dangerous characters, then pass `--relax-path-checks` to `cwltool`."
msgstr ""

#: ../../src/faq.md:373
#: dc28c1a8e15b4499b4af492ac3cd2c1e
msgid "CWL Parameter Reference Error due to Hyphen in Input Identifier"
msgstr ""

#: ../../src/faq.md:375
#: db57566297534dea82c6f66dd9c14b51
msgid "If `cwltool --validate` returns valid"
msgstr ""

#: ../../src/faq.md:384
#: 09a115ecb8d2487da88cd31e1bac337f
msgid "But executing it causes an error like:"
msgstr ""

#: ../../src/faq.md:396
#: 4537ae8ebd5c49f3857b2cbe81032d29
msgid "The file is here"
msgstr ""

#: ../../src/faq.md:410
#: d31aa1c1adf343e8b2b71322511bf7f1
msgid "Problem caused by `-` (hyphen character)."
msgstr ""

#: ../../src/faq.md:423
#: 096f725de9ee4c558d72695a84c40cbb
msgid "To fix this error, change `-` (hyphen) to `_` (underscore)"
msgstr ""

#: ../../src/faq.md:436
#: 58316efc7814473383abb738c5c0b5ef
msgid "If it is not possible to change the input identifier, then you can use an alternative CWL Parameter Reference syntax:"
msgstr ""

#: ../../src/faq.md:442
#: 2ac3f24fd4074acb8e96542b350d5771
msgid "Use CWL and cwltool with Singularity"
msgstr ""

#: ../../src/faq.md:445
#: ef3c267c3282458f891a76e5d467ec8e
msgid "The CWL standards are built around (optional) Docker format containers. The reference runner and several other CWL implementations support running those Docker format containers using the Singularity engine. Directly specifying a Singularity format container is not part of the CWL standards."
msgstr ""

#: ../../src/faq.md:450
#: aa97ef90186747f7b9d0aaccf17535d1
msgid "Debug JavaScript Expressions"
msgstr ""

#: ../../src/faq.md:452
#: bb5bc05d377d441abe02a09e3f1d1a03
msgid "You can use the <code>--js-console</code> option of <code>cwltool</code>, or you can try creating a JavaScript or TypeScript project for your code, and load it using <code>expressionLib</code>, e.g.: <a href=\"https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/template-tool.cwl#L6-L8\"> https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/template-tool.cwl#L6-L8</a></dd>"
msgstr ""
